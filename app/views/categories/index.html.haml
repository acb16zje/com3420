- content_for :title, "Categories"

%br/
.container.is-fluid
  - if not notice.nil?
    .columns
      .column.is-4.is-offset-4
        - if notice.include? 'Cannot'
          .notification.is-danger.has-text-centered
            %button.delete
            = notice
        - else
          .notification.is-success.has-text-centered
            %button.delete
            = notice

  %p.title.has-text-centered Current categories
  %p.title.has-text-centered
    = link_to 'Create new', new_category_path, class: 'button is-success'

  %table#categories.table.is-striped.is-bordered{:cellspacing => "0", :width => "100%"}
    %thead
      %tr
        %th Category
        %th Action
    %tbody
      - @categories.each do |category|
        %tr
          %td.has-text-centered
            = category.name
          %td
            .field.is-grouped.is-grouped-centered
              - if !category.is_peripheral && !category.has_peripheral
                %p.control
                  = link_to new_peripheral_category_path(:id => category.id), method: :post, data: { confirm: 'Are you sure?' }, class: 'button is-primary', id: "new_peripheral_category_#{category.id}" do
                    %span.icon
                      %i.class.fas.fa-plus
                    %span Create Peripheral Category
              %p.control
                = link_to edit_category_path(category), class: 'button is-link', id: "edit_category_#{category.id}" do
                  %span.icon
                    %i.class.fas.fa-edit
                  %span Edit
              %p.control
                = link_to category, method: :delete, data: { confirm: 'Are you sure?' }, class: 'button is-danger', id: "delete_category_#{category.id}" do
                  %span.icon
                    %i.class.fas.fa-trash
                  %span Delete
